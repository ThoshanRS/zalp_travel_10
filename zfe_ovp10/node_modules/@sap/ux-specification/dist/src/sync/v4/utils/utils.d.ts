import type { LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';
import type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';
import type { Definition } from 'typescript-json-schema';
import type { ExtensionLogger, GenerateAppSchemaParameters } from '@sap/ux-specification-types';
import { v4, DefinitionName } from '@sap/ux-specification-types';
export type LineItemDataForSchema = {
    appSchema: Definition;
    lineItemAnnotation: AnnotationTerm<LineItem>;
    entityType: EntityType;
    oDataServiceAVT: ConvertedMetadata;
    lineItemId: string;
    entitySet?: string;
};
/**
 * Adds the line item definition, columns and actions to the app schema (for the list report or an object page section comprising a table)
 * @param {LineItemDataForSchema} data: structure comprising
 * - appSchema - the app specific schema that shall get enhanced
 * - lineItemAnnotation - the UI.LineItem annotation, comprising all records
 * - entityType - the entity type as part of the AVT ConvertedMetadata
 * - oDataServiceAVT - complete service information, as returned by Annotation Vocabularies Tool
 * - lineItemId - in case of OP the parameter must be passed to distinguish the OP tables;
 *                in case of LR or ALP 'LineItems' is passed.
 * @param columnDefinitionName - name of the column definition, i.e. TableColumn or ObjectPageTableColumn
 */
export declare function addLineItemsTypeToSchema(data: LineItemDataForSchema, columnDefinitionName?: string): void;
/**
 * Find the relevant V4 page under the routing targets of manifest,json
 * @param pages - list of all pages in manifest
 * @param pageName - search criterion: page name
 * @param entitySet - search criterion: entity set
 * @param logger - logger for messages
 * @returns the page definition in manifest (if found)
 */
export declare function findPageV4(pages: v4.SapUiAppPageV4[], pageName: string, entitySet: EntitySet, logger: ExtensionLogger): v4.SapUiAppPageV4 | undefined;
/**
 * Depending on the template type, strip down the app schema so that only the relevant views are part of it
 * @param {Definition} appSchema - app specific JSON schema, to be adjusted
 * @param {GenerateAppSchemaParameters} generateParameters - object comprising all input parameters
 * @returns the right definition name for the table in the schema
 */
export declare function alignSchemaWithTemplateType(appSchema: Definition, generateParameters: GenerateAppSchemaParameters): DefinitionName.Table | DefinitionName.ALPTableView;
//# sourceMappingURL=utils.d.ts.map